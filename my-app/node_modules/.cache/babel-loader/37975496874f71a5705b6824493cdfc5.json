{"ast":null,"code":"var _jsxFileName = \"/Users/henriett.horvath/Desktop/REACT Weather app/REACT-Weather-App-1/my-app/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setWeather({\n      Temperature: response.data.main.temp,\n      Wind: response.data.wind.speed,\n      Humidity: response.data.main.humidity,\n      Description: response.data.weather[0].description,\n      Icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (city === \"\") {\n      alert(`Please enter a city`);\n    } else {\n      const apiKey = \"c95b7792f2deeca8f4736c654342258c\";\n      const apiUnit = \"metric\";\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${apiUnit}`;\n      axios.get(apiUrl).then(handleResponse);\n    }\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Type a city...\",\n      autoFocus: true,\n      onChange: updateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [form, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(weather.Temperature), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Description: \", weather.Description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", weather.Humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind: \", weather.Wind, \"km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.Icon,\n            alt: weather.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return form;\n  }\n}\n\n_s(Search, \"VtwX4kmPOGC7bqK52AgZWpH/jac=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/henriett.horvath/Desktop/REACT Weather app/REACT-Weather-App-1/my-app/src/Search.js"],"names":["React","useState","axios","Search","city","setCity","loaded","setLoaded","weather","setWeather","updateCity","event","target","value","handleResponse","response","Temperature","data","main","temp","Wind","wind","speed","Humidity","humidity","Description","description","Icon","icon","handleSubmit","preventDefault","alert","apiKey","apiUnit","apiUrl","get","then","form","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  const [city, setCity] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setWeather({\n      Temperature: response.data.main.temp,\n      Wind: response.data.wind.speed,\n      Humidity: response.data.main.humidity,\n      Description: response.data.weather[0].description,\n      Icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (city === \"\") {\n      alert(`Please enter a city`);\n    } else {\n      const apiKey = \"c95b7792f2deeca8f4736c654342258c\";\n      const apiUnit = \"metric\";\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${apiUnit}`;\n      axios.get(apiUrl).then(handleResponse);\n    }\n  }\n\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"search\"\n        placeholder=\"Type a city...\"\n        autoFocus\n        onChange={updateCity}\n      />\n      <input type=\"submit\" value=\"Search\" />\n    </form>\n  );\n  if (loaded) {\n    return (\n      <div>\n        {form}\n        <ul>\n          <li>Temperature: {Math.round(weather.Temperature)}Â°C</li>\n          <li>Description: {weather.Description}</li>\n          <li>Humidity: {weather.Humidity}%</li>\n          <li>Wind: {weather.Wind}km/h</li>\n          <li>\n            <img src={weather.Icon} alt={weather.Description} />\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return form;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}